$grid-columns: 12;
// RESPONSIVE GRID 
@mixin responsive-grid ($size) {
  @for $col-span from 1 through 12 {
    .col-#{$size}-#{$col-span}{
      width: (100% / $grid-columns) * $col-span;
    } 
  }
}

@mixin grid-width ($col-span){
  width: (100% / $grid-columns) * $col-span;
}

// ANIMATION
@mixin transform($move-to, $type, $initial-value, $custom-value, $final-value ) {
  @keyframes move-#{$move-to} {
    0% {
      opacity: 0;
      #{$type}: $initial-value;
    }
    80% {
      #{$type}: $custom-value;
    }
    100% {
      opacity: 1;
      #{$type}: $final-value;
    }
  }
}

@include transform(right, transform, translateX(-150px),  translateX(20px), translateX(0) );

@include transform(top-right, transform, translate(-150px, 150px),  translate(20px, -20px), translate(0, 0) );

@include transform(left, transform, translateX(150px),  translateX(-20px), translateX(0) );

@include transform(top, transform, translateY(150px),  translateY(-20px), translateY(0) );

@include transform(top-small, transform, translateY(0px),  translateY(-10px), translateY(-10px) );


// An Array of breakpoints.
$mobile-port: 400px;
$mobile-land: 600px;
$tablet-port: 768px;
$tablet-land: 992px;
$desktop-port: 1024px;
$desktop-land: 1200px;

/*
// MEDIA QUERY MANAGER */
@mixin respond ($breakpoint) {
@if $breakpoint == mobile-port {
  @media (min-width: $mobile-port) {
    @content; }
  }
@if $breakpoint == mobile-land {
  @media (min-width: $mobile-land) {
    @content; }
  }
@if $breakpoint == tablet-port {
  @media (min-width: $tablet-port) { 
    @content; }
  }
@if $breakpoint == tablet-land {
  @media (min-width: $tablet-land) {
    @content; }
  }
@if $breakpoint == tablet-large {
  @media (min-width: $tablet-land) {
    @content; }
  }
@if $breakpoint == desktop-port {
  @media (min-width: $desktop-port) {
  @content; }
}
@if $breakpoint == desktop-land {
  @media (min-width: $desktop-land) {
  @content; }

}
}